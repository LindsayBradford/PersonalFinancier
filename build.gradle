apply plugin: 'java'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

project.group = "blacksmyth.personalfinancier"
project.version = "0.2"

// Storing all dependencies in a libs directory. 

repositories {
   flatDir {
     dirs 'libs'  
   }
}

List libsToMerge = [ "jtattoo:JTattoo:1.6.10", "json-io:json-io:2.5.1", "gral-core:gral-core:0.9" ]
List libsToShip = [ "bcprov-jdk15on:bcprov-jdk15on:150" ]

configurations {
  mergeLibs
  shipLibs
}

dependencies {
  mergeLibs libsToMerge 
  shipLibs libsToShip
  compile libsToMerge, libsToShip 
}

// modify the sourceSets to match the layout of my java-only project.

sourceSets {
  main {
    java {
      srcDir 'src'
      exclude '**/*Test.java'
    }
    resources {
      srcDir 'src/blacksmyth/resources'
    }
  }
}

// Sub-par.  How can I set this nicely from within sourceSets?
// the sourceset command above is parsed, but doesn't seem to have
// effect at processResources task execution time.

processResources {
  destinationDir = file('build/classes/main/blacksmyth/resources')
}

jar {
  // Merge libraries we're dependent on into the executable jar.

  from {
    configurations.mergeLibs.collect { zipTree(it) }
  }

  manifest {
    attributes 'Built-By':  System.getProperty("user.name")
    attributes 'Main-Class' : 'blacksmyth.personalfinancier.PersonalFinancier'
    attributes 'CLass-Path' : configurations.shipLibs.collect{ it.getName() }.join(' ')
  }
}

// add the extra libaries we ship (not merge) as artifacts to deliver.
// commented out for now - artifactPattern on flatDir repositories doesn't seem
// possible, meaning I get my own project.version tacked on the end of the
// artifact when I try adding it as an artifact to upload.
//artifacts {
//  configurations.shipLibs.collect {
//    archives it
//  }
//}

// upload the finalised artifacts to a single repository being the 
// flat directory 'dist'.

uploadArchives {
  uploadDescriptor = false 
  repositories {
    flatDir {
      dirs 'dist'
    }
  }
}

task dist {
  dependsOn uploadArchives 
}

// the full task is the gradle equivalent of the ant script's 
// full target.

task full {
  dependsOn clean, dist
}
